{"id":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","dependencies":[{"name":"/home/gugah/dev/github/monisapp/frontend/package.json","includedInParent":true,"mtime":1581146226401},{"name":"/home/gugah/dev/github/monisapp/frontend/node_modules/react-relay/package.json","includedInParent":true,"mtime":1581133703244},{"name":"@babel/runtime/helpers/interopRequireDefault","loc":{"line":14,"column":37},"parent":"/home/gugah/dev/github/monisapp/frontend/node_modules/react-relay/lib/relay-experimental/MatchContainer.js","resolved":"/home/gugah/dev/github/monisapp/frontend/node_modules/@babel/runtime/helpers/interopRequireDefault.js"},{"name":"@babel/runtime/helpers/extends","loc":{"line":16,"column":47},"parent":"/home/gugah/dev/github/monisapp/frontend/node_modules/react-relay/lib/relay-experimental/MatchContainer.js","resolved":"/home/gugah/dev/github/monisapp/frontend/node_modules/@babel/runtime/helpers/extends.js"},{"name":"react","loc":{"line":18,"column":20},"parent":"/home/gugah/dev/github/monisapp/frontend/node_modules/react-relay/lib/relay-experimental/MatchContainer.js","resolved":"/home/gugah/dev/github/monisapp/frontend/node_modules/react/index.js"}],"generated":{"js":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+relay\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = require('react');\n\nvar useMemo = React.useMemo;\n/**\n * Renders the results of a data-driven dependency fetched with the `@match`\n * directive. The `@match` directive can be used to specify a mapping of\n * result types to the containers used to render those types. The result\n * value is an opaque object that described which component was selected\n * and a reference to its data. Use <MatchContainer/> to render these\n * values.\n *\n * ## Example\n *\n * For example, consider a piece of media content that might be text or\n * an image, where for clients that don't support images the application\n * should fall back to rendering the image caption as text. @match can be\n * used to dynamically select whether to render a given media item as\n * an image or text (on the server) and then fetch the corresponding\n * React component and its data dependencies (information about the\n * image or about the text).\n *\n * ```\n * // Media.react.js\n *\n * // Define a React component that uses <MatchContainer> to render the\n * // results of a @module selection\n * function Media(props) {\n *   const {media, ...restPropsj} = props;\n *\n *   const loader = moduleReference => {\n *      // given the data returned by your server for the @module directive,\n *      // return the React component (or throw a Suspense promise if\n *      // it is loading asynchronously).\n *      todo_returnModuleOrThrowPromise(moduleReference);\n *   };\n *   return <MatchContainer match={media.mediaAttachment} props={restProps} />;\n * }\n *\n * module.exports = createSuspenseFragmentContainer(\n *   Media,\n *   {\n *     media: graphql`\n *       fragment Media_media on Media {\n *         # ...\n *         mediaAttachment @match {\n *            ...ImageContainer_image @module(name: \"ImageContainer.react\")\n *            ...TextContainer_text @module(name: \"TextContainer.react\")\n *         }\n *       }\n *     `\n *   },\n * );\n * ```\n *\n * ## API\n *\n * MatchContainer accepts the following props:\n * - `match`: The results (an opaque object) of a `@match` field.\n * - `props`: Props that should be passed through to the dynamically\n *   selected component. Note that any of the components listed in\n *   `@module()` could be selected, so all components should accept\n *   the value passed here.\n * - `loader`: A function to load a module given a reference (whatever\n *   your server returns for the `js(moduleName: String)` field).\n *\n */\n// Note: this type is intentionally non-exact, it is expected that the\n// object may contain sibling fields.\n\nfunction MatchContainer(_ref2) {\n  var _ref;\n\n  var fallback = _ref2.fallback,\n      loader = _ref2.loader,\n      match = _ref2.match,\n      props = _ref2.props;\n\n  if (match != null && typeof match !== 'object') {\n    throw new Error('MatchContainer: Expected `match` value to be an object or null/undefined.');\n  } // NOTE: the MatchPointer type has a $fragmentRefs field to ensure that only\n  // an object that contains a FragmentSpread can be passed. If the fragment\n  // spread matches, then the metadata fields below (__id, __fragments, etc)\n  // will be present. But they can be missing if all the fragment spreads use\n  // @module and none of the types matched. The cast here is necessary because\n  // fragment Flow types don't describe metadata fields, only the actual schema\n  // fields the developer selected.\n\n\n  var _ref3 = (_ref = match) !== null && _ref !== void 0 ? _ref : {},\n      __id = _ref3.__id,\n      __fragments = _ref3.__fragments,\n      __fragmentOwner = _ref3.__fragmentOwner,\n      __fragmentPropName = _ref3.__fragmentPropName,\n      __module_component = _ref3.__module_component;\n\n  if (__fragmentOwner != null && typeof __fragmentOwner !== 'object' || __fragmentPropName != null && typeof __fragmentPropName !== 'string' || __fragments != null && typeof __fragments !== 'object' || __id != null && typeof __id !== 'string') {\n    throw new Error(\"MatchContainer: Invalid 'match' value, expected an object that has a \" + \"'...SomeFragment' spread.\");\n  }\n\n  var LoadedContainer = __module_component != null ? loader(__module_component) : null;\n  var fragmentProps = useMemo(function () {\n    // TODO: Perform this transformation in RelayReader so that unchanged\n    // output of subscriptions already has a stable identity.\n    if (__fragmentPropName != null && __id != null && __fragments != null) {\n      var fragProps = {};\n      fragProps[__fragmentPropName] = {\n        __id: __id,\n        __fragments: __fragments,\n        __fragmentOwner: __fragmentOwner\n      };\n      return fragProps;\n    }\n\n    return null;\n  }, [__id, __fragments, __fragmentOwner, __fragmentPropName]);\n\n  if (LoadedContainer != null && fragmentProps != null) {\n    /* $FlowFixMe(>=0.111.0) This comment suppresses an error found when Flow\n     * v0.111.0 was deployed. To see the error, delete this comment and run\n     * Flow. */\n    return React.createElement(LoadedContainer, (0, _extends2[\"default\"])({}, props, fragmentProps));\n  } else {\n    var _fallback;\n\n    return (_fallback = fallback) !== null && _fallback !== void 0 ? _fallback : null;\n  }\n}\n\nmodule.exports = MatchContainer;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/react-relay/lib/relay-experimental/MatchContainer.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}}],"sources":{"node_modules/react-relay/lib/relay-experimental/MatchContainer.js":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+relay\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = require('react');\n\nvar useMemo = React.useMemo;\n/**\n * Renders the results of a data-driven dependency fetched with the `@match`\n * directive. The `@match` directive can be used to specify a mapping of\n * result types to the containers used to render those types. The result\n * value is an opaque object that described which component was selected\n * and a reference to its data. Use <MatchContainer/> to render these\n * values.\n *\n * ## Example\n *\n * For example, consider a piece of media content that might be text or\n * an image, where for clients that don't support images the application\n * should fall back to rendering the image caption as text. @match can be\n * used to dynamically select whether to render a given media item as\n * an image or text (on the server) and then fetch the corresponding\n * React component and its data dependencies (information about the\n * image or about the text).\n *\n * ```\n * // Media.react.js\n *\n * // Define a React component that uses <MatchContainer> to render the\n * // results of a @module selection\n * function Media(props) {\n *   const {media, ...restPropsj} = props;\n *\n *   const loader = moduleReference => {\n *      // given the data returned by your server for the @module directive,\n *      // return the React component (or throw a Suspense promise if\n *      // it is loading asynchronously).\n *      todo_returnModuleOrThrowPromise(moduleReference);\n *   };\n *   return <MatchContainer match={media.mediaAttachment} props={restProps} />;\n * }\n *\n * module.exports = createSuspenseFragmentContainer(\n *   Media,\n *   {\n *     media: graphql`\n *       fragment Media_media on Media {\n *         # ...\n *         mediaAttachment @match {\n *            ...ImageContainer_image @module(name: \"ImageContainer.react\")\n *            ...TextContainer_text @module(name: \"TextContainer.react\")\n *         }\n *       }\n *     `\n *   },\n * );\n * ```\n *\n * ## API\n *\n * MatchContainer accepts the following props:\n * - `match`: The results (an opaque object) of a `@match` field.\n * - `props`: Props that should be passed through to the dynamically\n *   selected component. Note that any of the components listed in\n *   `@module()` could be selected, so all components should accept\n *   the value passed here.\n * - `loader`: A function to load a module given a reference (whatever\n *   your server returns for the `js(moduleName: String)` field).\n *\n */\n// Note: this type is intentionally non-exact, it is expected that the\n// object may contain sibling fields.\n\nfunction MatchContainer(_ref2) {\n  var _ref;\n\n  var fallback = _ref2.fallback,\n      loader = _ref2.loader,\n      match = _ref2.match,\n      props = _ref2.props;\n\n  if (match != null && typeof match !== 'object') {\n    throw new Error('MatchContainer: Expected `match` value to be an object or null/undefined.');\n  } // NOTE: the MatchPointer type has a $fragmentRefs field to ensure that only\n  // an object that contains a FragmentSpread can be passed. If the fragment\n  // spread matches, then the metadata fields below (__id, __fragments, etc)\n  // will be present. But they can be missing if all the fragment spreads use\n  // @module and none of the types matched. The cast here is necessary because\n  // fragment Flow types don't describe metadata fields, only the actual schema\n  // fields the developer selected.\n\n\n  var _ref3 = (_ref = match) !== null && _ref !== void 0 ? _ref : {},\n      __id = _ref3.__id,\n      __fragments = _ref3.__fragments,\n      __fragmentOwner = _ref3.__fragmentOwner,\n      __fragmentPropName = _ref3.__fragmentPropName,\n      __module_component = _ref3.__module_component;\n\n  if (__fragmentOwner != null && typeof __fragmentOwner !== 'object' || __fragmentPropName != null && typeof __fragmentPropName !== 'string' || __fragments != null && typeof __fragments !== 'object' || __id != null && typeof __id !== 'string') {\n    throw new Error(\"MatchContainer: Invalid 'match' value, expected an object that has a \" + \"'...SomeFragment' spread.\");\n  }\n\n  var LoadedContainer = __module_component != null ? loader(__module_component) : null;\n  var fragmentProps = useMemo(function () {\n    // TODO: Perform this transformation in RelayReader so that unchanged\n    // output of subscriptions already has a stable identity.\n    if (__fragmentPropName != null && __id != null && __fragments != null) {\n      var fragProps = {};\n      fragProps[__fragmentPropName] = {\n        __id: __id,\n        __fragments: __fragments,\n        __fragmentOwner: __fragmentOwner\n      };\n      return fragProps;\n    }\n\n    return null;\n  }, [__id, __fragments, __fragmentOwner, __fragmentPropName]);\n\n  if (LoadedContainer != null && fragmentProps != null) {\n    /* $FlowFixMe(>=0.111.0) This comment suppresses an error found when Flow\n     * v0.111.0 was deployed. To see the error, delete this comment and run\n     * Flow. */\n    return React.createElement(LoadedContainer, (0, _extends2[\"default\"])({}, props, fragmentProps));\n  } else {\n    var _fallback;\n\n    return (_fallback = fallback) !== null && _fallback !== void 0 ? _fallback : null;\n  }\n}\n\nmodule.exports = MatchContainer;"},"lineCount":146}},"error":null,"hash":"4390245e5186291d3360c46fdb7d8740","cacheData":{"env":{}}}