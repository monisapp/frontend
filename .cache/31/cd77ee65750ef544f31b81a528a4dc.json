{"id":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","dependencies":[{"name":"/home/gugah/dev/github/monisapp/frontend/package.json","includedInParent":true,"mtime":1581146226401},{"name":"/home/gugah/dev/github/monisapp/frontend/node_modules/react-relay/package.json","includedInParent":true,"mtime":1581133703244},{"name":"fbjs/lib/invariant","loc":{"line":14,"column":24},"parent":"/home/gugah/dev/github/monisapp/frontend/node_modules/react-relay/lib/relay-experimental/fetchQuery.js","resolved":"/home/gugah/dev/github/monisapp/frontend/node_modules/fbjs/lib/invariant.js"},{"name":"relay-runtime","loc":{"line":16,"column":23},"parent":"/home/gugah/dev/github/monisapp/frontend/node_modules/react-relay/lib/relay-experimental/fetchQuery.js","resolved":"/home/gugah/dev/github/monisapp/frontend/node_modules/relay-runtime/index.js"}],"generated":{"js":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+relay\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar _require = require('relay-runtime'),\n    RelayRuntimeInternal = _require.__internal,\n    createOperationDescriptor = _require.createOperationDescriptor,\n    getRequest = _require.getRequest;\n/**\n * Fetches the given query and variables on the provided environment,\n * and de-dupes identical in-flight requests.\n *\n * Observing a request:\n * ====================\n * fetchQuery returns an Observable which you can call .subscribe()\n * on. Subscribe optionally takes an Observer, which you can provide to\n * observe network events:\n *\n * ```\n * fetchQuery(environment, query, variables).subscribe({\n *   // Called when network requests starts\n *   start: (subsctiption) => {},\n *\n *   // Called after a payload is received and written to the local store\n *   next: (payload) => {},\n *\n *   // Called when network requests errors\n *   error: (error) => {},\n *\n *   // Called when network requests fully completes\n *   complete: () => {},\n *\n *   // Called when network request is unsubscribed\n *   unsubscribe: (subscription) => {},\n * });\n * ```\n *\n * Request Promise:\n * ================\n * The obervable can be converted to a Promise with .toPromise(), which will\n * resolve to a snapshot of the query data when the first response is received\n * from the server.\n *\n * ```\n * fetchQuery(environment, query, variables).then((data) => {\n *   // ...\n * });\n * ```\n *\n * In-flight request de-duping:\n * ============================\n * By default, calling fetchQuery multiple times with the same\n * environment, query and variables will not initiate a new request if a request\n * for those same parameters is already in flight.\n *\n * A request is marked in-flight from the moment it starts until the moment it\n * fully completes, regardless of error or successful completion.\n *\n * NOTE: If the request completes _synchronously_, calling fetchQuery\n * a second time with the same arguments in the same tick will _NOT_ de-dupe\n * the request given that it will no longer be in-flight.\n *\n *\n * Data Retention:\n * ===============\n * This function will NOT retain query data, meaning that it is not guaranteed\n * that the fetched data will remain in the Relay store after the request has\n * completed.\n * If you need to retain the query data outside of the network request,\n * you need to use `environment.retain()`.\n *\n *\n * Cancelling requests:\n * ====================\n * If the disposable returned by subscribe is called while the\n * request is in-flight, the request will be cancelled.\n *\n * ```\n * const disposable = fetchQuery(...).subscribe(...);\n *\n * // This will cancel the request if it is in-flight.\n * disposable.dispose();\n * ```\n * NOTE: When using .toPromise(), the request cannot be cancelled.\n */\n\n\nfunction fetchQuery(environment, query, variables, options) {\n  var queryNode = getRequest(query);\n  !(queryNode.params.operationKind === 'query') ? \"development\" !== \"production\" ? invariant(false, 'fetchQuery: Expected query operation') : invariant(false) : void 0;\n  var operation = createOperationDescriptor(queryNode, variables);\n  return RelayRuntimeInternal.fetchQuery(environment, operation, options).map(function () {\n    return environment.lookup(operation.fragment).data;\n  });\n}\n\nmodule.exports = fetchQuery;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":11,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":12,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":14,"column":0}},{"name":"invariant","generated":{"line":14,"column":4},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":14,"column":4}},{"generated":{"line":14,"column":13},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":14,"column":13}},{"name":"require","generated":{"line":14,"column":16},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":14,"column":16}},{"generated":{"line":14,"column":23},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":14,"column":23}},{"generated":{"line":14,"column":24},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":14,"column":24}},{"generated":{"line":14,"column":44},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":14,"column":23}},{"generated":{"line":14,"column":45},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":14,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":16,"column":0}},{"name":"_require","generated":{"line":16,"column":4},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":16,"column":4}},{"generated":{"line":16,"column":12},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":16,"column":12}},{"name":"require","generated":{"line":16,"column":15},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":16,"column":15}},{"generated":{"line":16,"column":22},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":16,"column":22}},{"generated":{"line":16,"column":23},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":16,"column":23}},{"generated":{"line":16,"column":38},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":16,"column":22}},{"generated":{"line":16,"column":39},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":16,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":16,"column":0}},{"name":"RelayRuntimeInternal","generated":{"line":17,"column":4},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":17,"column":4}},{"generated":{"line":17,"column":24},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":17,"column":24}},{"name":"_require","generated":{"line":17,"column":27},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":17,"column":27}},{"generated":{"line":17,"column":35},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":17,"column":35}},{"name":"__internal","generated":{"line":17,"column":36},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":17,"column":36}},{"generated":{"line":17,"column":46},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":16,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":16,"column":0}},{"name":"createOperationDescriptor","generated":{"line":18,"column":4},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":18,"column":4}},{"generated":{"line":18,"column":29},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":18,"column":29}},{"name":"_require","generated":{"line":18,"column":32},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":18,"column":32}},{"generated":{"line":18,"column":40},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":18,"column":40}},{"name":"createOperationDescriptor","generated":{"line":18,"column":41},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":18,"column":41}},{"generated":{"line":18,"column":66},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":16,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":16,"column":0}},{"name":"getRequest","generated":{"line":19,"column":4},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":19,"column":4}},{"generated":{"line":19,"column":14},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":19,"column":14}},{"name":"_require","generated":{"line":19,"column":17},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":19,"column":17}},{"generated":{"line":19,"column":25},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":19,"column":25}},{"name":"getRequest","generated":{"line":19,"column":26},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":19,"column":26}},{"generated":{"line":19,"column":36},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":16,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":21,"column":0}},{"generated":{"line":99,"column":0},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":98,"column":0}},{"name":"fetchQuery","generated":{"line":99,"column":9},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":98,"column":9}},{"generated":{"line":99,"column":19},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":98,"column":0}},{"name":"environment","generated":{"line":99,"column":20},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":98,"column":20}},{"generated":{"line":99,"column":31},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":98,"column":0}},{"name":"query","generated":{"line":99,"column":33},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":98,"column":33}},{"generated":{"line":99,"column":38},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":98,"column":0}},{"name":"variables","generated":{"line":99,"column":40},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":98,"column":40}},{"generated":{"line":99,"column":49},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":98,"column":0}},{"name":"options","generated":{"line":99,"column":51},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":98,"column":51}},{"generated":{"line":99,"column":58},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":98,"column":0}},{"generated":{"line":99,"column":60},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":98,"column":60}},{"generated":{"line":100,"column":0},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":99,"column":2}},{"name":"queryNode","generated":{"line":100,"column":6},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":99,"column":6}},{"generated":{"line":100,"column":15},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":99,"column":15}},{"name":"getRequest","generated":{"line":100,"column":18},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":99,"column":18}},{"generated":{"line":100,"column":28},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":99,"column":28}},{"name":"query","generated":{"line":100,"column":29},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":99,"column":29}},{"generated":{"line":100,"column":34},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":99,"column":28}},{"generated":{"line":100,"column":35},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":99,"column":2}},{"generated":{"line":101,"column":0},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":100,"column":2}},{"name":"queryNode","generated":{"line":101,"column":4},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":100,"column":4}},{"generated":{"line":101,"column":13},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":100,"column":13}},{"name":"params","generated":{"line":101,"column":14},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":100,"column":14}},{"generated":{"line":101,"column":20},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":100,"column":4}},{"name":"operationKind","generated":{"line":101,"column":21},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":100,"column":21}},{"generated":{"line":101,"column":34},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":100,"column":4}},{"generated":{"line":101,"column":39},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":100,"column":39}},{"generated":{"line":101,"column":46},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":100,"column":2}},{"generated":{"line":101,"column":50},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":100,"column":50}},{"generated":{"line":101,"column":68},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":100,"column":75}},{"generated":{"line":101,"column":80},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":100,"column":50}},{"name":"invariant","generated":{"line":101,"column":83},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":100,"column":90}},{"generated":{"line":101,"column":92},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":100,"column":99}},{"generated":{"line":101,"column":93},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":100,"column":100}},{"generated":{"line":101,"column":98},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":100,"column":99}},{"generated":{"line":101,"column":100},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":100,"column":107}},{"generated":{"line":101,"column":138},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":100,"column":99}},{"generated":{"line":101,"column":139},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":100,"column":50}},{"name":"invariant","generated":{"line":101,"column":142},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":100,"column":149}},{"generated":{"line":101,"column":151},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":100,"column":158}},{"generated":{"line":101,"column":152},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":100,"column":159}},{"generated":{"line":101,"column":157},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":100,"column":158}},{"generated":{"line":101,"column":158},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":100,"column":2}},{"generated":{"line":101,"column":161},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":100,"column":168}},{"generated":{"line":101,"column":166},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":100,"column":173}},{"generated":{"line":101,"column":167},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":100,"column":2}},{"generated":{"line":102,"column":0},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":101,"column":2}},{"name":"operation","generated":{"line":102,"column":6},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":101,"column":6}},{"generated":{"line":102,"column":15},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":101,"column":15}},{"name":"createOperationDescriptor","generated":{"line":102,"column":18},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":101,"column":18}},{"generated":{"line":102,"column":43},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":101,"column":43}},{"name":"queryNode","generated":{"line":102,"column":44},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":101,"column":44}},{"generated":{"line":102,"column":53},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":101,"column":43}},{"name":"variables","generated":{"line":102,"column":55},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":101,"column":55}},{"generated":{"line":102,"column":64},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":101,"column":43}},{"generated":{"line":102,"column":65},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":101,"column":2}},{"generated":{"line":103,"column":0},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":102,"column":2}},{"name":"RelayRuntimeInternal","generated":{"line":103,"column":9},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":102,"column":9}},{"generated":{"line":103,"column":29},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":102,"column":29}},{"name":"fetchQuery","generated":{"line":103,"column":30},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":102,"column":30}},{"generated":{"line":103,"column":40},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":102,"column":9}},{"name":"environment","generated":{"line":103,"column":41},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":102,"column":41}},{"generated":{"line":103,"column":52},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":102,"column":9}},{"name":"operation","generated":{"line":103,"column":54},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":102,"column":54}},{"generated":{"line":103,"column":63},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":102,"column":9}},{"name":"options","generated":{"line":103,"column":65},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":102,"column":65}},{"generated":{"line":103,"column":72},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":102,"column":9}},{"name":"map","generated":{"line":103,"column":74},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":102,"column":74}},{"generated":{"line":103,"column":77},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":102,"column":9}},{"generated":{"line":103,"column":78},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":102,"column":78}},{"generated":{"line":103,"column":90},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":102,"column":90}},{"generated":{"line":104,"column":0},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":103,"column":4}},{"name":"environment","generated":{"line":104,"column":11},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":103,"column":11}},{"generated":{"line":104,"column":22},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":103,"column":22}},{"name":"lookup","generated":{"line":104,"column":23},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":103,"column":23}},{"generated":{"line":104,"column":29},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":103,"column":11}},{"name":"operation","generated":{"line":104,"column":30},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":103,"column":30}},{"generated":{"line":104,"column":39},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":103,"column":39}},{"name":"fragment","generated":{"line":104,"column":40},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":103,"column":40}},{"generated":{"line":104,"column":48},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":103,"column":11}},{"name":"data","generated":{"line":104,"column":50},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":103,"column":50}},{"generated":{"line":104,"column":54},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":103,"column":4}},{"generated":{"line":105,"column":0},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":104,"column":3}},{"generated":{"line":105,"column":3},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":102,"column":9}},{"generated":{"line":105,"column":4},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":102,"column":2}},{"generated":{"line":106,"column":0},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":105,"column":1}},{"name":"module","generated":{"line":108,"column":0},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":107,"column":0}},{"generated":{"line":108,"column":6},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":107,"column":6}},{"name":"exports","generated":{"line":108,"column":7},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":107,"column":7}},{"generated":{"line":108,"column":14},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":107,"column":0}},{"name":"fetchQuery","generated":{"line":108,"column":17},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":107,"column":17}},{"generated":{"line":108,"column":27},"source":"node_modules/react-relay/lib/relay-experimental/fetchQuery.js","original":{"line":107,"column":0}}],"sources":{"node_modules/react-relay/lib/relay-experimental/fetchQuery.js":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+relay\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar _require = require('relay-runtime'),\n    RelayRuntimeInternal = _require.__internal,\n    createOperationDescriptor = _require.createOperationDescriptor,\n    getRequest = _require.getRequest;\n\n/**\n * Fetches the given query and variables on the provided environment,\n * and de-dupes identical in-flight requests.\n *\n * Observing a request:\n * ====================\n * fetchQuery returns an Observable which you can call .subscribe()\n * on. Subscribe optionally takes an Observer, which you can provide to\n * observe network events:\n *\n * ```\n * fetchQuery(environment, query, variables).subscribe({\n *   // Called when network requests starts\n *   start: (subsctiption) => {},\n *\n *   // Called after a payload is received and written to the local store\n *   next: (payload) => {},\n *\n *   // Called when network requests errors\n *   error: (error) => {},\n *\n *   // Called when network requests fully completes\n *   complete: () => {},\n *\n *   // Called when network request is unsubscribed\n *   unsubscribe: (subscription) => {},\n * });\n * ```\n *\n * Request Promise:\n * ================\n * The obervable can be converted to a Promise with .toPromise(), which will\n * resolve to a snapshot of the query data when the first response is received\n * from the server.\n *\n * ```\n * fetchQuery(environment, query, variables).then((data) => {\n *   // ...\n * });\n * ```\n *\n * In-flight request de-duping:\n * ============================\n * By default, calling fetchQuery multiple times with the same\n * environment, query and variables will not initiate a new request if a request\n * for those same parameters is already in flight.\n *\n * A request is marked in-flight from the moment it starts until the moment it\n * fully completes, regardless of error or successful completion.\n *\n * NOTE: If the request completes _synchronously_, calling fetchQuery\n * a second time with the same arguments in the same tick will _NOT_ de-dupe\n * the request given that it will no longer be in-flight.\n *\n *\n * Data Retention:\n * ===============\n * This function will NOT retain query data, meaning that it is not guaranteed\n * that the fetched data will remain in the Relay store after the request has\n * completed.\n * If you need to retain the query data outside of the network request,\n * you need to use `environment.retain()`.\n *\n *\n * Cancelling requests:\n * ====================\n * If the disposable returned by subscribe is called while the\n * request is in-flight, the request will be cancelled.\n *\n * ```\n * const disposable = fetchQuery(...).subscribe(...);\n *\n * // This will cancel the request if it is in-flight.\n * disposable.dispose();\n * ```\n * NOTE: When using .toPromise(), the request cannot be cancelled.\n */\nfunction fetchQuery(environment, query, variables, options) {\n  var queryNode = getRequest(query);\n  !(queryNode.params.operationKind === 'query') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'fetchQuery: Expected query operation') : invariant(false) : void 0;\n  var operation = createOperationDescriptor(queryNode, variables);\n  return RelayRuntimeInternal.fetchQuery(environment, operation, options).map(function () {\n    return environment.lookup(operation.fragment).data;\n  });\n}\n\nmodule.exports = fetchQuery;"},"lineCount":null}},"error":null,"hash":"96277369ddb4b11c632361037a0988b6","cacheData":{"env":{"NODE_ENV":"development"}}}